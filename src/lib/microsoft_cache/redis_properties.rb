# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

require_relative '../arm/module_definition'
require_relative './module_definition'

module Azure::ARM::Cache
    #
    # Model object.
    #
    class RedisProperties < Azure::ARM::TypeBase

      # @return Microsoft.Cache/Redis/sku
      attr_accessor :sku

      # @return Microsoft.Cache/Redis: (only if using clustering) number of
      # shards in the redis cluster
      attr_accessor :shard_count

      # @return Microsoft.Cache/Redis if set to true, enables less secure
      # direct access to redis on port 6379 (WITHOUT SSL tunneling)
      attr_accessor :enable_non_ssl_port

      # @return Microsoft.Cache/Redis/redisConfiguration
      attr_accessor :redis_configuration

      # @return Microsoft.Cache/Redis (optional) the ARM resource ID of a
      # Classic Virtual Network for the redis cache to join
      attr_accessor :virtual_network

      # @return [String] Microsoft.Cache/Redis (required with virtualNetwork)
      # the name of an existing subnet for the redis cache to join
      attr_accessor :subnet

      # @return Microsoft.Cache/Redis (required with virtualNetwork) the
      # static IP address to allocate to the redis cache
      attr_accessor :static_ip

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(output_object, object)
        Azure::ARM::TypeBase.serialize_object(output_object, object)
        object.validate

        serialized_property = object.sku
        if serialized_property.is_a? RedisPropertiesSku0
          unless serialized_property.nil?
            serialized_property = serialized_property.to_h
          end
        end
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:sku] = serialized_property unless serialized_property.nil?

        serialized_property = object.shard_count
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:shardCount] = serialized_property unless serialized_property.nil?

        serialized_property = object.enable_non_ssl_port
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:enableNonSslPort] = serialized_property unless serialized_property.nil?

        serialized_property = object.redis_configuration
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:redisConfiguration] = serialized_property unless serialized_property.nil?

        serialized_property = object.virtual_network
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:virtualNetwork] = serialized_property unless serialized_property.nil?

        serialized_property = object.subnet
        output_object[:subnet] = serialized_property unless serialized_property.nil?

        serialized_property = object.static_ip
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:staticIP] = serialized_property unless serialized_property.nil?

        output_object
      end

      def to_h
        hash = {}
        RedisProperties.serialize_object(hash,self)
        hash
      end

      def self.ds_properties
        result = Array.new 
        result.push :sku
        result.push :shard_count
        result.push :enable_non_ssl_port
        result.push :redis_configuration
        result.push :virtual_network
        result.push :subnet
        result.push :static_ip
        result
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [RedisProperties] Deserialized object.
      #
      def self.deserialize_object(output_object, object)
        return if object.nil?
        conf = Configurator.new
        conf.parent = output_object

        if object.key?(:sku)
          conf.sku object[:sku]
          object.delete :sku
        end

        if object.key?(:shard_count)
          conf.shard_count object[:shard_count]
          object.delete :shard_count
        end

        if object.key?(:enable_non_ssl_port)
          conf.enable_non_ssl_port object[:enable_non_ssl_port]
          object.delete :enable_non_ssl_port
        end

        if object.key?(:redis_configuration)
          conf.redis_configuration object[:redis_configuration]
          object.delete :redis_configuration
        end

        if object.key?(:virtual_network)
          conf.virtual_network object[:virtual_network]
          object.delete :virtual_network
        end

        if object.key?(:subnet)
          conf.subnet object[:subnet]
          object.delete :subnet
        end

        if object.key?(:static_ip)
          conf.static_ip object[:static_ip]
          object.delete :static_ip
        end

        output_object
      end

      def get_name_template
        'rp'
        end

      def initialize(parent, init)
        super(parent)
        if init.is_a? Hash
          RedisProperties.deserialize_object self, init.clone
        end
      end

      # Configuration code
      class Configurator < Azure::ARM::ResourceConfigurator
        attr_accessor :parent
        # @param sku
        #        RedisPropertiesSku0
        #        Expression
        def sku(props)
          if @parent.sku.nil? and props.is_a? RedisPropertiesSku0
            @parent.sku = props
            @parent.sku.parent = @parent
            @parent.sku._rsrcpath = 'sku'
          end
          if @parent.sku.nil? and (props.is_a? Hash) and (Azure::ARM::TypeBase.matches_type props, RedisPropertiesSku0)
            @parent.sku = RedisPropertiesSku0.new(@parent, props)
            @parent.sku._rsrcpath = 'sku'
          end
          if @parent.sku.nil? and props.is_a? Azure::ARM::Expression
            @parent.sku = props
          end
          @parent.sku
        end
        # @param shard_count
        #        Fixnum
        #        Expression
        def shard_count(props)
          if props.is_a? Fixnum or props.is_a? Azure::ARM::Expression
            @parent.shard_count = props
            return
          end
          if @parent.shard_count.nil? and props.is_a? Azure::ARM::Expression
            @parent.shard_count = props
          end
          @parent.shard_count
        end
        # @param enable_non_ssl_port
        #        Boolean
        #        Expression
        def enable_non_ssl_port(props)
          if props.is_a? TrueClass or props.is_a? FalseClass or props.is_a? Azure::ARM::Expression
            @parent.enable_non_ssl_port = props
            return
          end
          if @parent.enable_non_ssl_port.nil? and props.is_a? Azure::ARM::Expression
            @parent.enable_non_ssl_port = props
          end
          @parent.enable_non_ssl_port
        end
        # @param redis_configuration
        #        Object
        #        Expression
        def redis_configuration(props)
          if props.is_a? Object or props.is_a? Azure::ARM::Expression
            @parent.redis_configuration = props
            return
          end
          if @parent.redis_configuration.nil? and props.is_a? Azure::ARM::Expression
            @parent.redis_configuration = props
          end
          @parent.redis_configuration
        end
        # @param virtual_network
        #        String
        #        Expression
        def virtual_network(props)
          if props.is_a? String or props.is_a? Azure::ARM::Expression
            @parent.virtual_network = props
            return
          end
          if @parent.virtual_network.nil? and props.is_a? Azure::ARM::Expression
            @parent.virtual_network = props
          end
          @parent.virtual_network
        end
        # @param subnet
        #        String
        def subnet(props)
          if props.is_a? String or props.is_a? Azure::ARM::Expression
            @parent.subnet = props
            return
          end
          @parent.subnet
        end
        # @param static_ip
        #        String
        #        Expression
        def static_ip(props)
          if props.is_a? String or props.is_a? Azure::ARM::Expression
            @parent.static_ip = props
            return
          end
          if @parent.static_ip.nil? and props.is_a? Azure::ARM::Expression
            @parent.static_ip = props
          end
          @parent.static_ip
        end
        def create(init=nil,&block)
          @parent = RedisProperties.new nil, init
          self.instance_exec(@parent,&block) if block
          @parent
        end
      end
      def configure(&block)
        conf = Configurator.new
        conf.parent = self
        conf.instance_exec(self,&block) if block
        self
      end
    end
end
