# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

require_relative '../arm/module_definition'
require_relative './module_definition'

module Azure::ARM::Sql
    #
    # Model object.
    #
    class DatabasesBase < Azure::ARM::TypeBase

      # @return Microsoft.Sql/server/databases: Optional. Edition of the
      # database to be created. If omitted, the default is Web on server
      # version 2.0 or Standard on server version 12.0.
      attr_accessor :edition

      # @return Microsoft.Sql/server/databases: Database collation
      attr_accessor :collation

      # @return Microsoft.Sql/server/databases: Sets the maximum size, in
      # bytes, for the database. This value must be within the range of
      # allowed values for Edition.
      attr_accessor :max_size_bytes

      # @return Microsoft.Sql/server/databases: The GUID corresponding to the
      # performance level for Edition. Shared =
      # 910B4FCB-8A29-4C3E-958F-F7BA794388B2, Basic =
      # DD6D99BB-F193-4EC1-86F2-43D3BCCBC49C, S0 =
      # F1173C43-91BD-4AAA-973C-54E79E15235B, S1 =
      # 1B1EBD4D-D903-4BAA-97F9-4EA675F5E928, S2 =
      # 455330E1-00CD-488B-B5FA-177C226F28B7, S3 =
      # 789681B8-CA10-4EB0-BDF2-E0B050601B40, P1 =
      # 7203483A-C4FB-4304-9E9F-17C71C904F5D, P2 =
      # A7D1B92D-C987-4375-B54D-2B1D0E0F5BB0, P3 =
      # A7C4C615-CFB1-464B-B252-925BE0A19446
      attr_accessor :requested_service_objective_id

      # @return Microsoft.Sql/server/databases: Defines that databases is
      # created as a Point-In-Time restoration of another database.
      attr_accessor :create_mode

      # @return [String] Microsoft.Sql/server/databases: The URI of the source
      # database.
      attr_accessor :source_database_id

      # @return [String] Microsoft.Sql/server/databases: The point in time for
      # the restore.
      attr_accessor :restore_point_in_time

      # @return [String] Microsoft.Sql/server/databases: The deletion date
      # time of the source database.
      attr_accessor :source_database_deletion_date

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(output_object, object)
        Azure::ARM::TypeBase.serialize_object(output_object, object)
        object.validate

        serialized_property = object.edition
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:edition] = serialized_property unless serialized_property.nil?

        serialized_property = object.collation
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:collation] = serialized_property unless serialized_property.nil?

        serialized_property = object.max_size_bytes
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:maxSizeBytes] = serialized_property unless serialized_property.nil?

        serialized_property = object.requested_service_objective_id
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:requestedServiceObjectiveId] = serialized_property unless serialized_property.nil?

        serialized_property = object.create_mode
        if serialized_property.is_a? Azure::ARM::Expression
          unless serialized_property.nil?
            serialized_property = serialized_property.to_s
          end
        end
        output_object[:createMode] = serialized_property unless serialized_property.nil?

        serialized_property = object.source_database_id
        output_object[:sourceDatabaseId] = serialized_property unless serialized_property.nil?

        serialized_property = object.restore_point_in_time
        output_object[:restorePointInTime] = serialized_property unless serialized_property.nil?

        serialized_property = object.source_database_deletion_date
        output_object[:sourceDatabaseDeletionDate] = serialized_property unless serialized_property.nil?

        output_object
      end

      def to_h
        hash = {}
        DatabasesBase.serialize_object(hash,self)
        hash
      end

      def self.ds_properties
        result = Array.new 
        result.push :edition
        result.push :collation
        result.push :max_size_bytes
        result.push :requested_service_objective_id
        result.push :create_mode
        result.push :source_database_id
        result.push :restore_point_in_time
        result.push :source_database_deletion_date
        result
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [DatabasesBase] Deserialized object.
      #
      def self.deserialize_object(output_object, object)
        return if object.nil?
        conf = Configurator.new
        conf.parent = output_object

        if object.key?(:edition)
          conf.edition object[:edition]
          object.delete :edition
        end

        if object.key?(:collation)
          conf.collation object[:collation]
          object.delete :collation
        end

        if object.key?(:max_size_bytes)
          conf.max_size_bytes object[:max_size_bytes]
          object.delete :max_size_bytes
        end

        if object.key?(:requested_service_objective_id)
          conf.requested_service_objective_id object[:requested_service_objective_id]
          object.delete :requested_service_objective_id
        end

        if object.key?(:create_mode)
          conf.create_mode object[:create_mode]
          object.delete :create_mode
        end

        if object.key?(:source_database_id)
          conf.source_database_id object[:source_database_id]
          object.delete :source_database_id
        end

        if object.key?(:restore_point_in_time)
          conf.restore_point_in_time object[:restore_point_in_time]
          object.delete :restore_point_in_time
        end

        if object.key?(:source_database_deletion_date)
          conf.source_database_deletion_date object[:source_database_deletion_date]
          object.delete :source_database_deletion_date
        end

        output_object
      end

      def get_name_template
        'db'
        end

      def initialize(parent, init)
        super(parent)
        if init.is_a? Hash
          DatabasesBase.deserialize_object self, init.clone
        end
      end

      # Configuration code
      class Configurator < Azure::ARM::ResourceConfigurator
        attr_accessor :parent
        # @param edition
        #        Expression
        #        A string, one of 'Basic','Standard','Premium'
        def edition(props)
          if @parent.edition.nil? and props.is_a? Azure::ARM::Expression
            @parent.edition = props
          end
          if props.is_a? String
            fail ArgumentError, "#{props} is an invalid value for @parent.edition" unless ['Basic','Standard','Premium'].index(props)
            @parent.edition = props
            return
          end
          @parent.edition
        end
        # @param collation
        #        Expression
        #        A string, one of 'SQL_Latin1_General_Cp437_CS_AS_KI_WI','SQL_Latin1_General_Cp437_CI_AS_KI_WI','SQL_Latin1_General_Pref_Cp437_CI_AS_KI_WI','SQL_Latin1_General_Cp437_CI_AI_KI_WI','SQL_Latin1_General_Cp437_BIN','SQL_Latin1_General_Cp850_BIN','SQL_Latin1_General_Cp850_CS_AS_KI_WI','SQL_Latin1_General_Cp850_CI_AS_KI_WI','SQL_Latin1_General_Cp850_CI_AI_KI_WI','SQL_Latin1_General_Pref_Cp850_CI_AS_KI_WI','SQL_1xCompat_Cp850_CI_AS_KI_WI','SQL_Latin1_General_Cp1_CS_AS_KI_WI','SQL_Latin1_General_Cp1_CI_AS_KI_WI','SQL_Latin1_General_Pref_Cp1_CI_AS_KI_WI','SQL_Latin1_General_Cp1_CI_AI_KI_WI','SQL_AltDiction_Cp850_CS_AS_KI_WI','SQL_AltDiction_Pref_Cp850_CI_AS_KI_WI','SQL_AltDiction_Cp850_CI_AI_KI_WI','SQL_Scandainavian_Pref_Cp850_CI_AS_KI_WI','SQL_Scandainavian_Cp850_CS_AS_KI_WI','SQL_Scandainavian_Cp850_CI_AS_KI_WI','SQL_AltDiction_Cp850_CI_AS_KI_WI','SQL_Latin1_General_1250_BIN','SQL_Latin1_General_Cp1250_CS_AS_KI_WI','SQL_Latin1_General_Cp1250_CI_AS_KI_WI','SQL_Czech_Cp1250_CS_AS_KI_WI','SQL_Czech_Cp1250_CI_AS_KI_WI','SQL_Hungarian_Cp1250_CS_AS_KI_WI','SQL_Hungarian_Cp1250_CI_AS_KI_WI','SQL_Polish_Cp1250_CS_AS_KI_WI','SQL_Polish_Cp1250_CI_AS_KI_WI','SQL_Romanian_Cp1250_CS_AS_KI_WI','SQL_Romanian_Cp1250_CI_AS_KI_WI','SQL_Croatian_Cp1250_CS_AS_KI_WI','SQL_Croatian_Cp1250_CI_AS_KI_WI','SQL_Slovak_Cp1250_CS_AS_KI_WI','SQL_Slovak_Cp1250_CI_AS_KI_WI','SQL_Slovenian_Cp1250_CS_AS_KI_WI','SQL_Slovenian_Cp1250_CI_AS_KI_WI','SQL_Latin1_General_1251_BIN','SQL_Latin1_General_Cp1251_CS_AS_KI_WI','SQL_Latin1_General_Cp1251_CI_AS_KI_WI','SQL_Ukrainian_Cp1251_CS_AS_KI_WI','SQL_Ukrainian_Cp1251_CI_AS_KI_WI','SQL_Latin1_General_1253_BIN','SQL_Latin1_General_Cp1253_CS_AS_KI_WI','SQL_Latin1_General_Cp1253_CI_AS_KI_WI','SQL_Latin1_General_Cp1253_CI_AI_KI_WI','SQL_Latin1_General_1254_BIN','SQL_Latin1_General_Cp1254_CS_AS_KI_WI','SQL_Latin1_General_Cp1254_CI_AS_KI_WI','SQL_Latin1_General_1255_BIN','SQL_Latin1_General_Cp1255_CS_AS_KI_WI','SQL_Latin1_General_Cp1255_CI_AS_KI_WI','SQL_Latin1_General_1256_BIN','SQL_Latin1_General_Cp1256_CS_AS_KI_WI','SQL_Latin1_General_Cp1256_CI_AS_KI_WI','SQL_Latin1_General_1257_BIN','SQL_Latin1_General_Cp1257_CS_AS_KI_WI','SQL_Latin1_General_Cp1257_CI_AS_KI_WI','SQL_Estonian_Cp1257_CS_AS_KI_WI','SQL_Estonian_Cp1257_CI_AS_KI_WI','SQL_Latvian_Cp1257_CS_AS_KI_WI','SQL_Latvian_Cp1257_CI_AS_KI_WI','SQL_Lithuanian_Cp1257_CS_AS_KI_WI','SQL_Lithuanian_Cp1257_CI_AS_KI_WI','SQL_Danish_Pref_Cp1_CI_AS_KI_WI','SQL_SwedishPhone_Pref_Cp1_CI_AS_KI_WI','SQL_SwedishStd_Pref_Cp1_CI_AS_KI_WI','SQL_Icelandic_Pref_Cp1_CI_AS_KI_WI'
        def collation(props)
          if @parent.collation.nil? and props.is_a? Azure::ARM::Expression
            @parent.collation = props
          end
          if props.is_a? String
            fail ArgumentError, "#{props} is an invalid value for @parent.collation" unless ['SQL_Latin1_General_Cp437_CS_AS_KI_WI','SQL_Latin1_General_Cp437_CI_AS_KI_WI','SQL_Latin1_General_Pref_Cp437_CI_AS_KI_WI','SQL_Latin1_General_Cp437_CI_AI_KI_WI','SQL_Latin1_General_Cp437_BIN','SQL_Latin1_General_Cp850_BIN','SQL_Latin1_General_Cp850_CS_AS_KI_WI','SQL_Latin1_General_Cp850_CI_AS_KI_WI','SQL_Latin1_General_Cp850_CI_AI_KI_WI','SQL_Latin1_General_Pref_Cp850_CI_AS_KI_WI','SQL_1xCompat_Cp850_CI_AS_KI_WI','SQL_Latin1_General_Cp1_CS_AS_KI_WI','SQL_Latin1_General_Cp1_CI_AS_KI_WI','SQL_Latin1_General_Pref_Cp1_CI_AS_KI_WI','SQL_Latin1_General_Cp1_CI_AI_KI_WI','SQL_AltDiction_Cp850_CS_AS_KI_WI','SQL_AltDiction_Pref_Cp850_CI_AS_KI_WI','SQL_AltDiction_Cp850_CI_AI_KI_WI','SQL_Scandainavian_Pref_Cp850_CI_AS_KI_WI','SQL_Scandainavian_Cp850_CS_AS_KI_WI','SQL_Scandainavian_Cp850_CI_AS_KI_WI','SQL_AltDiction_Cp850_CI_AS_KI_WI','SQL_Latin1_General_1250_BIN','SQL_Latin1_General_Cp1250_CS_AS_KI_WI','SQL_Latin1_General_Cp1250_CI_AS_KI_WI','SQL_Czech_Cp1250_CS_AS_KI_WI','SQL_Czech_Cp1250_CI_AS_KI_WI','SQL_Hungarian_Cp1250_CS_AS_KI_WI','SQL_Hungarian_Cp1250_CI_AS_KI_WI','SQL_Polish_Cp1250_CS_AS_KI_WI','SQL_Polish_Cp1250_CI_AS_KI_WI','SQL_Romanian_Cp1250_CS_AS_KI_WI','SQL_Romanian_Cp1250_CI_AS_KI_WI','SQL_Croatian_Cp1250_CS_AS_KI_WI','SQL_Croatian_Cp1250_CI_AS_KI_WI','SQL_Slovak_Cp1250_CS_AS_KI_WI','SQL_Slovak_Cp1250_CI_AS_KI_WI','SQL_Slovenian_Cp1250_CS_AS_KI_WI','SQL_Slovenian_Cp1250_CI_AS_KI_WI','SQL_Latin1_General_1251_BIN','SQL_Latin1_General_Cp1251_CS_AS_KI_WI','SQL_Latin1_General_Cp1251_CI_AS_KI_WI','SQL_Ukrainian_Cp1251_CS_AS_KI_WI','SQL_Ukrainian_Cp1251_CI_AS_KI_WI','SQL_Latin1_General_1253_BIN','SQL_Latin1_General_Cp1253_CS_AS_KI_WI','SQL_Latin1_General_Cp1253_CI_AS_KI_WI','SQL_Latin1_General_Cp1253_CI_AI_KI_WI','SQL_Latin1_General_1254_BIN','SQL_Latin1_General_Cp1254_CS_AS_KI_WI','SQL_Latin1_General_Cp1254_CI_AS_KI_WI','SQL_Latin1_General_1255_BIN','SQL_Latin1_General_Cp1255_CS_AS_KI_WI','SQL_Latin1_General_Cp1255_CI_AS_KI_WI','SQL_Latin1_General_1256_BIN','SQL_Latin1_General_Cp1256_CS_AS_KI_WI','SQL_Latin1_General_Cp1256_CI_AS_KI_WI','SQL_Latin1_General_1257_BIN','SQL_Latin1_General_Cp1257_CS_AS_KI_WI','SQL_Latin1_General_Cp1257_CI_AS_KI_WI','SQL_Estonian_Cp1257_CS_AS_KI_WI','SQL_Estonian_Cp1257_CI_AS_KI_WI','SQL_Latvian_Cp1257_CS_AS_KI_WI','SQL_Latvian_Cp1257_CI_AS_KI_WI','SQL_Lithuanian_Cp1257_CS_AS_KI_WI','SQL_Lithuanian_Cp1257_CI_AS_KI_WI','SQL_Danish_Pref_Cp1_CI_AS_KI_WI','SQL_SwedishPhone_Pref_Cp1_CI_AS_KI_WI','SQL_SwedishStd_Pref_Cp1_CI_AS_KI_WI','SQL_Icelandic_Pref_Cp1_CI_AS_KI_WI'].index(props)
            @parent.collation = props
            return
          end
          @parent.collation
        end
        # @param max_size_bytes
        #        Expression
        #        A string, one of '104857600','524288000','1073741824','2147483648','5368709120','10737418240','21474836480','32212254720','42949672960','53687091200','107374182400','161061273600','214748364800','268435456000','322122547200','429496729600','536870912000'
        def max_size_bytes(props)
          if @parent.max_size_bytes.nil? and props.is_a? Azure::ARM::Expression
            @parent.max_size_bytes = props
          end
          if props.is_a? String
            fail ArgumentError, "#{props} is an invalid value for @parent.max_size_bytes" unless ['104857600','524288000','1073741824','2147483648','5368709120','10737418240','21474836480','32212254720','42949672960','53687091200','107374182400','161061273600','214748364800','268435456000','322122547200','429496729600','536870912000'].index(props)
            @parent.max_size_bytes = props
            return
          end
          @parent.max_size_bytes
        end
        # @param requested_service_objective_id
        #        Expression
        #        A string, one of '910B4FCB-8A29-4C3E-958F-F7BA794388B2','DD6D99BB-F193-4EC1-86F2-43D3BCCBC49C','F1173C43-91BD-4AAA-973C-54E79E15235B','1B1EBD4D-D903-4BAA-97F9-4EA675F5E928','455330E1-00CD-488B-B5FA-177C226F28B7','789681B8-CA10-4EB0-BDF2-E0B050601B40','7203483A-C4FB-4304-9E9F-17C71C904F5D','A7D1B92D-C987-4375-B54D-2B1D0E0F5BB0','A7C4C615-CFB1-464B-B252-925BE0A19446'
        def requested_service_objective_id(props)
          if @parent.requested_service_objective_id.nil? and props.is_a? Azure::ARM::Expression
            @parent.requested_service_objective_id = props
          end
          if props.is_a? String
            fail ArgumentError, "#{props} is an invalid value for @parent.requested_service_objective_id" unless ['910B4FCB-8A29-4C3E-958F-F7BA794388B2','DD6D99BB-F193-4EC1-86F2-43D3BCCBC49C','F1173C43-91BD-4AAA-973C-54E79E15235B','1B1EBD4D-D903-4BAA-97F9-4EA675F5E928','455330E1-00CD-488B-B5FA-177C226F28B7','789681B8-CA10-4EB0-BDF2-E0B050601B40','7203483A-C4FB-4304-9E9F-17C71C904F5D','A7D1B92D-C987-4375-B54D-2B1D0E0F5BB0','A7C4C615-CFB1-464B-B252-925BE0A19446'].index(props)
            @parent.requested_service_objective_id = props
            return
          end
          @parent.requested_service_objective_id
        end
        # @param create_mode
        #        Expression
        #        A string, one of 'Copy','OnlineSecondary','OfflineSecondary','Recovery','PointInTimeRestore','Restore'
        def create_mode(props)
          if @parent.create_mode.nil? and props.is_a? Azure::ARM::Expression
            @parent.create_mode = props
          end
          if props.is_a? String
            fail ArgumentError, "#{props} is an invalid value for @parent.create_mode" unless ['Copy','OnlineSecondary','OfflineSecondary','Recovery','PointInTimeRestore','Restore'].index(props)
            @parent.create_mode = props
            return
          end
          @parent.create_mode
        end
        # @param source_database_id
        #        String
        def source_database_id(props)
          if props.is_a? String or props.is_a? Azure::ARM::Expression
            @parent.source_database_id = props
            return
          end
          @parent.source_database_id
        end
        # @param restore_point_in_time
        #        String
        def restore_point_in_time(props)
          if props.is_a? String or props.is_a? Azure::ARM::Expression
            @parent.restore_point_in_time = props
            return
          end
          @parent.restore_point_in_time
        end
        # @param source_database_deletion_date
        #        String
        def source_database_deletion_date(props)
          if props.is_a? String or props.is_a? Azure::ARM::Expression
            @parent.source_database_deletion_date = props
            return
          end
          @parent.source_database_deletion_date
        end
        def create(init=nil,&block)
          @parent = DatabasesBase.new nil, init
          self.instance_exec(@parent,&block) if block
          @parent
        end
      end
      def configure(&block)
        conf = Configurator.new
        conf.parent = self
        conf.instance_exec(self,&block) if block
        self
      end
    end
end
