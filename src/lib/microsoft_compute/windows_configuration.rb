# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

require_relative '../arm/module_definition'
require_relative './module_definition'

module Azure::ARM::Compute
    #
    # Model object.
    #
    class WindowsConfiguration < Azure::ARM::TypeBase

      # @return [Boolean]
      attr_accessor :provision_vmagent

      # @return [WinRM]
      attr_accessor :win_rm

      # @return [Array<AdditionalUnattendContent>]
      attr_writer :additional_unattend_content
      def additional_unattend_content(name=nil)
        if name and @additional_unattend_content and @additional_unattend_content.is_a? Array
          return @additional_unattend_content.find { | p | p.name == name } if name.is_a? String
          return @additional_unattend_content[name] if name.is_a? Integer
        end
        @additional_unattend_content
      end

      # @return [Boolean]
      attr_accessor :enable_automatic_updates

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        @win_rm.validate unless @win_rm.nil?
        @additional_unattend_content.each{ |e| e.validate if e.respond_to?(:validate) } unless @additional_unattend_content.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(output_object, object)
        Azure::ARM::TypeBase.serialize_object(output_object, object)
        object.validate

        serialized_property = object.provision_vmagent
        output_object[:provisionVMAgent] = serialized_property unless serialized_property.nil?

        serialized_property = object.win_rm
        unless serialized_property.nil?
          serialized_property = serialized_property.to_h
        end
        output_object[:winRM] = serialized_property unless serialized_property.nil?

        serialized_property = object.additional_unattend_content
        unless serialized_property.nil?
          serializedarray = []
          serialized_property.each do |element|
            unless element.nil?
              element = element.to_h
            end
            serializedarray.push(element)
          end
          serialized_property = serializedarray
        end
        output_object[:additionalUnattendContent] = serialized_property unless serialized_property.nil?

        serialized_property = object.enable_automatic_updates
        output_object[:enableAutomaticUpdates] = serialized_property unless serialized_property.nil?

        output_object
      end

      def to_h
        hash = {}
        WindowsConfiguration.serialize_object(hash,self)
        hash
      end

      def self.ds_properties
        result = Array.new 
        result.push :provision_vmagent
        result.push :win_rm
        result.push :additional_unattend_content
        result.push :enable_automatic_updates
        result
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [WindowsConfiguration] Deserialized object.
      #
      def self.deserialize_object(output_object, object)
        return if object.nil?
        conf = Configurator.new
        conf.parent = output_object

        if object.key?(:provision_vmagent)
          conf.provision_vmagent object[:provision_vmagent]
          object.delete :provision_vmagent
        end

        if object.key?(:win_rm)
          conf.win_rm object[:win_rm]
          object.delete :win_rm
        end

        if object.key?(:additional_unattend_content)
          conf.additional_unattend_content object[:additional_unattend_content]
          object.delete :additional_unattend_content
        end

        if object.key?(:enable_automatic_updates)
          conf.enable_automatic_updates object[:enable_automatic_updates]
          object.delete :enable_automatic_updates
        end

        output_object
      end

      def get_name_template
        'wc'
        end

      def initialize(parent, init)
        super(parent)
        if init.is_a? Hash
          WindowsConfiguration.deserialize_object self, init.clone
        end
      end

      # Configuration code
      class Configurator < Azure::ARM::ResourceConfigurator
        attr_accessor :parent
        # @param provision_vmagent
        #        Boolean
        def provision_vmagent(props)
          if props.is_a? TrueClass or props.is_a? FalseClass or props.is_a? Azure::ARM::Expression
            @parent.provision_vmagent = props
            return
          end
          @parent.provision_vmagent
        end
        # @param win_rm
        #        WinRM
        def win_rm(props)
          if @parent.win_rm.nil? and props.is_a? WinRM
            @parent.win_rm = props
            @parent.win_rm.parent = @parent
            @parent.win_rm._rsrcpath = 'winRM'
          end
          if @parent.win_rm.nil? and (props.is_a? Hash) and (Azure::ARM::TypeBase.matches_type props, WinRM)
            @parent.win_rm = WinRM.new(@parent, props)
            @parent.win_rm._rsrcpath = 'winRM'
          end
          @parent.win_rm
        end
        # @param additional_unattend_content
        #        Array<AdditionalUnattendContent>
        def additional_unattend_content(props)
          if props.is_a? Array
            @parent.additional_unattend_content = Array.new if @parent.additional_unattend_content.nil?
            props.each { |p| @parent.additional_unattend_content.push _additional_unattend_content_additionalunattendcontent(p) }
            return @parent.additional_unattend_content
          end
          _element = nil
          if _element.nil? and props.is_a? AdditionalUnattendContent
            _element = props
            _element.parent = @parent
            _element._rsrcpath = 'additionalUnattendContent'
          end
          if _element.nil? and (props.is_a? Hash) and (Azure::ARM::TypeBase.matches_type props, AdditionalUnattendContent)
            _element = AdditionalUnattendContent.new(@parent, props)
            _element._rsrcpath = 'additionalUnattendContent'
          end
          unless _element.nil?
            @parent.additional_unattend_content = Array.new if @parent.additional_unattend_content.nil?
            @parent.additional_unattend_content.push _element
          end
          @parent.additional_unattend_content
        end
        def _additional_unattend_content_additionalunattendcontent(props)
          if props.is_a? AdditionalUnattendContent
            props.parent = @parent
            props._rsrcpath = 'additionalUnattendContent'
            return props
          end
          if (props.is_a? Hash) and (Azure::ARM::TypeBase.matches_type props, AdditionalUnattendContent)
            _properties = AdditionalUnattendContent.new(@parent, props)
            _properties._rsrcpath = 'additionalUnattendContent'
            return _properties
          end
        end
        # @param enable_automatic_updates
        #        Boolean
        def enable_automatic_updates(props)
          if props.is_a? TrueClass or props.is_a? FalseClass or props.is_a? Azure::ARM::Expression
            @parent.enable_automatic_updates = props
            return
          end
          @parent.enable_automatic_updates
        end
        def create(init=nil,&block)
          @parent = WindowsConfiguration.new nil, init
          self.instance_exec(@parent,&block) if block
          @parent
        end
      end
      def configure(&block)
        conf = Configurator.new
        conf.parent = self
        conf.instance_exec(self,&block) if block
        self
      end
    end
end
