# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

require_relative '../../arm/expression'
require_relative '../../arm/models/type_base'

module Azure::ARM

    #
    # Plan of the resource
    #
    # noinspection RubyResolve
    class ResourcePlan < Azure::ARM::TypeBase
      # @return [String] Name of the plan
      attr_accessor :name

      # @return [String] Plan promotion code
      attr_accessor :promotion_code

      # @return [String] Name of the publisher
      attr_accessor :publisher

      # @return [String] Name of the product
      attr_accessor :product

      #
      # Validate the object. Throws ArgumentError if validation fails.
      #
      def validate
        fail ArgumentError, 'property name is nil' if @name.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(output_object, object)
        object.validate

        serialized_property = object.name
        output_object[:name] = serialized_property unless serialized_property.nil?

        serialized_property = object.promotion_code
        output_object[:promotionCode] = serialized_property unless serialized_property.nil?

        serialized_property = object.publisher
        output_object[:publisher] = serialized_property unless serialized_property.nil?

        serialized_property = object.product
        output_object[:product] = serialized_property unless serialized_property.nil?

        output_object
      end

      def to_h
        hash = {}
        ResourcePlan.serialize_object(hash,self)
        hash
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [ResourcePlan] Deserialized object.
      #
      def self.deserialize_object(output_object, object)
        return if object.nil?

        deserialized_property = object[:name]
        output_object.name = deserialized_property

        deserialized_property = object[:promotionCode]
        output_object.promotion_code = deserialized_property

        deserialized_property = object[:publisher]
        output_object.publisher = deserialized_property

        deserialized_property = object[:product]
        output_object.product = deserialized_property

        output_object
      end

      def initialize(parent, init)
        super(parent)
        if init.is_a? Hash
          ResourcePlan.deserialize_object(self, init)
        end
      end
    end

end
