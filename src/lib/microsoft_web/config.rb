# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

require_relative '../arm/module_definition'
require_relative './module_definition'

module Azure::ARM::Web
    #
    # Microsoft.Web/sites: Configuration settings for a web site.
    #
    class Config < Azure::ARM::ResourceBase

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        fail ArgumentError, 'property type is nil' if self.type.nil?
        fail ArgumentError, 'property api_version is nil' if self.api_version.nil?
        fail ArgumentError, 'property name is nil' if self.name.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(output_object, object)
        Azure::ARM::ResourceBase.serialize_object(output_object, object)
        object.validate

        output_object
      end

      def to_h
        self.validate
        hash = {}
        Config.serialize_object(hash,self)
        hash
      end

      def self.ds_properties
        result = Array.new
        result
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [Config] Deserialized object.
      #
      def self.deserialize_object(output_object, object)
        return if object.nil?
        object.delete :name
        object.delete :type
        object.delete :api_version
        object.delete :location
        object.delete :tags
        object.delete :copy
        object.delete :comments
        conf = Configurator.new output_object.template
        conf.parent = output_object

        output_object
      end

      def get_name_template
        'c'
      end

      def initialize(parent, init)
        super(parent, init)
        self.type = 'config' if self.type.nil?
        self.api_version = '2015-08-01' if self.api_version.nil?
        if init.is_a? Hash
          Config.deserialize_object self, init.clone
        end 
      end

      # Configuration code
      class Configurator < Azure::ARM::ResourceConfigurator
        attr_accessor :parent
        attr_accessor :template
        # @param type
        #        A string, one of 'Microsoft.Web/sites/config','config'
        def type(props)
          if props.is_a? String
            fail ArgumentError, "#{props} is an invalid value for @parent.type" unless ['Microsoft.Web/sites/config','config'].index(props)
            @parent.type = props
            return
          end
          @parent.type
        end
        # @param name
        #        A string, one of 'web','connectionstrings','appsettings'
        #        Expression
        def name(props)
          if props.is_a? String
            fail ArgumentError, "#{props} is an invalid value for @parent.name" unless ['web','connectionstrings','appsettings'].index(props)
            @parent.name = props
            return
          end
          if @parent.name.nil? and props.is_a? Azure::ARM::Expression
            @parent.name = props
          end
          @parent.name
        end
        def initialize(template)
          @template = template
        end
        def create(init=nil,&block)
          @parent = Config.new @template,init
          @template.resources.push @parent
          self.instance_exec(@parent,&block) if block
          @parent
        end
      end
      def configure(&block)
        conf = Configurator.new self.template
        conf.parent = self
        conf.instance_exec(self,&block) if block
        self
      end
    end
end
